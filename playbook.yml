- hosts: all_esxi
  tasks:
  - name: Turn off the firewall on the ESXi
    command: esxcli network firewall set --enabled false

- hosts: localhost
  vars:
    vcenter_validate_certs: False
    gather_facts: False
    vcsa_ip: '192.168.123.90'
    datastore_name: local
  tasks:
  - name: add the host in /etc/hosts
    lineinfile:
      dest: /etc/hosts
      regexp: '.*{{item}}.*'
      line: "{{ hostvars[item].ansible_host }} {{item}}.test {{item}}"
      state: present
    become: true
    with_items: "{{ groups.all }}"

  - name: add the vcsa host in /etc/hosts
    lineinfile:
      dest: /etc/hosts
      regexp: '^{{ vcsa_ip }} vcenter.test vcenter\s.*'
      line: "{{ vcsa_ip }} vcenter.test vcenter"
      state: present
    become: yes
  - name: add gateway.test (192.168.123.1) in too /etc/hosts
    lineinfile:
      dest: /etc/hosts
      regexp: '^192.168.123.1 gateway.test gateway\s.*'
      line: "192.168.123.1 gateway.test gateway"
      state: present
    become: yes

  - name: Reload the dnsmasq instances
    command: sudo pkill -HUP dnsmasq
    become: true
  - name: Ensure we can resolve the vcsa host
    command: host vcenter 192.168.123.1
  - name: Ensure we can resolve the vcsa FQDN
    command: host vcenter.test 192.168.123.1
  - name: Validate the reverse DNS resolution of the vcsa IP
    shell: "nslookup {{ vcsa_ip }} 192.168.123.1|grep vcenter"
  - name: Set NTP setting for all ESXi Host in given Cluster
    vmware_host_ntp:
      hostname: '{{ item }}'
      username: root
      password: '!234AaAa56'
      esxi_hostname: '{{ item }}'
      validate_certs: false
      state: present
      ntp_servers:
          - 0.pool.ntp.org
          - 1.pool.ntp.org
    with_items: "{{ groups.all_esxi }}"

  - name: Start ntpd setting for an ESXi Host
    vmware_host_service_manager:
      hostname: '{{ item }}'
      username: root
      password: '!234AaAa56'
      esxi_hostname: '{{ item }}'
      validate_certs: false
      service_name: ntpd
      state: present
    with_items: "{{ groups.all_esxi }}"

  - import_role:
      name: vcenter-instance
    vars:
      vcenter_instance:
        installation:
          from: 'iso'
          iso_path: "{{ '~/Downloads/VMware-VCSA-all-6.7.0-14367737.iso' | expanduser }}"
        network:  # IP Configuration of the vcenter
          address: '{{ vcsa_ip }}'
          prefix: 24
          gateway: 192.168.123.1
          dns: 192.168.123.1
          hostname: vcenter.test
        esxi:
          hostname: '{{ hostvars["esxi-vcenter"].ansible_host }}'
          username: root
          password: '!234AaAa56'
          datastore_name: datastore1

#  - name: set state to poweroff on the tested VM
#    vmware_guest_powerstate:
#      validate_certs: False
#      hostname: esxi-vcenter.test
#      username: 'root'
#      password: '!234AaAa56'
#      name: 'vCenter-Server-Appliance'
#      state: powered-off
#
#  - name: Save the final vCenter appliance
#    vmware_export_ovf:
#      hostname: esxi-vcenter.test
#      username: 'root'
#      password: '!234AaAa56'
#      validate_certs: false
#      name: 'vCenter-Server-Appliance'
#      export_with_images: true
#      export_dir: /home/goneri/tmp/

- hosts: datastore
  tasks:
  - name: Prepare the NFS shares
    file:
        path: '{{ item }}'
        state: directory
        owner: 1000
        group: 1000
    with_items:
        - /srv/share/vms
        - /srv/share/isos
    become: True

  - name: Download ISO
    get_url:
      url: '{{ item.url }}'
      dest: '/srv/share/isos/{{ item.name }}'
      mode: '0644'
    with_items:
        - name: fedora.iso
          url: https://download.fedoraproject.org/pub/fedora/linux/releases/30/Workstation/x86_64/iso/Fedora-Workstation-Live-x86_64-30-1.2.iso
        - name: centos.iso
          url: http://isoredirect.centos.org/centos/8/isos/x86_64/CentOS-8-x86_64-1905-dvd1.iso

  - name: Prepare the /etc/exports file
    copy:
        dest: /etc/exports
        content: |
           /srv/share 192.168.123.0/255.255.255.0(rw,anonuid=1000,anongid=1000)
    become: True
    notify:
        - Restart nfs-server

  handlers:
  - name: Restart nfs-server
    systemd:
      state: restarted
      enabled: True
      name: nfs-server
    become: True

